<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="CommonBackground">
        <control type="group">
            <depth>DepthBackground</depth>
            <visible>Skin.HasSetting(SingleGlobalBackground) + !Skin.HasSetting(HolidayEffects)</visible>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$INFO[Skin.String(GlobalBackGroundPath)]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>FanartCrossfadeTime</fadetime>
                <visible>!String.IsEmpty(Skin.String(GlobalBackGroundPath)) + !Skin.HasSetting(GlobalLiveWeatherImage)</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true" fallback="Backgrounds/SKINDEFAULT.jpg">$VAR[SkinBackgroundPath]$INFO[Skin.CurrentTheme,,.jpg]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>String.IsEmpty(Skin.String(GlobalBackGroundPath)) + !Skin.HasSetting(GlobalLiveWeatherImage)</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$VAR[CurrentWeatherFanart]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>Skin.HasSetting(GlobalLiveWeatherImage)</visible>
            </control>
        </control>
        <control type="group">
            <depth>DepthBackground</depth>
            <visible>Skin.HasSetting(HolidayEffects)</visible>
            <control type="image">
                <description>Holiday Theme Default Image</description>
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <texture>special://skin/extras/Holiday/xmastree.jpg</texture>
                <visible>String.IsEmpty(Skin.String(HolidayThemePath)) | !Window.IsVisible(Home) + !String.IsEmpty(Skin.String(HolidayThemePath))</visible>
            </control>
            <control type="multiimage">
                <description>Holiday Theme Images</description>
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true" fallback="special://skin/extras/Holiday/xmastree.jpg">$INFO[Skin.String(HolidayThemePath)]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>Window.IsVisible(Home)</visible>
                <visible>!String.IsEmpty(Skin.String(HolidayThemePath))</visible>
            </control>
        </control>
        <control type="group">
            <depth>DepthBackground</depth>
            <visible>Skin.HasSetting(HideHomeNowPlaying) | !Player.HasAudio | String.Contains(Window(Videos).Property(TvTunesIsAlive),TRUE) | [Player.HasAudio + !Skin.HasSetting(VizOnlyOnHome) + Skin.HasSetting(HideBackgroundCDWall) + Skin.HasSetting(DisableSlideShowArt)]</visible>
            <visible>!Skin.HasSetting(SingleGlobalBackground) + !String.IsEqual(Window(Home).Property(MenuBackground),Theme) + !String.IsEqual(Container(9000).ListItem.Property(Background),Theme) + !Skin.HasSetting(HolidayEffects)</visible>
            <control type="group">
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <include>LiveContentBackgrounds</include>
                <visible>Window.IsVisible(Home) + String.IsEqual(Container(9000).ListItem.Property(Background),Live) + !String.IsEqual(Container(9000).ListItem.Property(HiLiteItem),Weather)</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$VAR[CurrentWeatherFanart]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>Window.IsVisible(Home) + String.IsEqual(Container(9000).ListItem.Property(Background),Live)  + String.IsEqual(Container(9000).ListItem.Property(HiLiteItem),Weather)</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[HomeMenuItemBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>Window.IsVisible(Home)</visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(Background),Database) | String.IsEqual(Container(9000).ListItem.Property(Background),Default) | String.IsEmpty(Container(9000).ListItem.Property(Background))</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$VAR[WeatherBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>FanartCrossfadeTime</fadetime>
                <visible>String.IsEqual(Window(Home).Property(MenuItemSelected),Weather)</visible>
                <visible>Window.IsVisible(weather)</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>!Window.IsVisible(Home) + !String.IsEqual(Window(Home).Property(MenuItemSelected),Weather) + !Container.Content(Seasons) + !Container.Content(Episodes)</visible>
            </control>
        </control>
        <control type="multiimage">
            <depth>DepthBackground</depth>
            <include>Dimensions_Fullscreen</include>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
            <include>BackgroundTimePerImage</include>
            <randomize>true</randomize>
            <fadetime>1000</fadetime>
            <visible>!Skin.HasSetting(SingleGlobalBackground) + !Skin.HasSetting(HolidayEffects) + !Window.IsVisible(Home) + !Player.HasVideo + Skin.HasSetting(HideBackGroundFanart)</visible>
        </control>
        <control type="group">
            <depth>DepthBackground</depth>
            <visible>!Window.IsVisible(Home) + !Player.HasVideo + !Skin.HasSetting(HideBackGroundFanart)</visible>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>!String.IsEqual(Window(Home).Property(MenuItemSelected),Weather) + Player.HasAudio</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$VAR[WeatherBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>FanartCrossfadeTime</fadetime>
                <visible>String.IsEqual(Window(Home).Property(MenuItemSelected),Weather) + Player.HasAudio</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true" fallback="Backgrounds/SKINDEFAULT.jpg">$INFO[Fanart.Image]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>!String.IsEmpty(Fanart.Image)</visible>
                <visible>String.IsEqual(ListItem.Label,..) + [Container.Content(Seasons) | Container.Content(Episodes)]</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
                <include>BackgroundTimePerImage</include>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>[String.IsEqual(ListItem.Label,..) | String.IsEmpty(ListItem.Property(Fanart_Image))] + Container.Content(Episodes) + String.IsEmpty(Fanart.Image)</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[ListItem.Art(fanart)]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>!String.IsEmpty(ListItem.Property(Fanart_Image))</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$VAR[GenreLabelFanart]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>!String.IsEqual(ListItem.Label,..) + Container.Content(genres)</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$VAR[GenreFolderFanart]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>String.IsEqual(ListItem.Label,..)</visible>
                <visible>String.Contains(ListItem.FilenameAndPath,videodb://movies/genres) | String.Contains(ListItem.FilenameAndPath,videodb://tvshows/genres) | String.Contains(ListItem.FilenameAndPath,videodb://musicvideos/genres) | String.Contains(ListItem.FilenameAndPath,musicdb://genres)</visible>
            </control>
            <control type="group">
                <visible>!String.IsEmpty(Window(Home).Property(TVGuide.BackgroundFanart))</visible>
                <visible>Window.IsActive(script-NextAired-TVGuide.xml)</visible>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(200).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(200)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(201).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(201)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(202).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(202)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(203).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(203)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(204).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(204)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(205).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(205)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[Container(206).ListItem.Property(Fanart)]</texture>
                    <visible>Control.HasFocus(206)</visible>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <include>VisibleFadeEffect</include>
                </control>
            </control>
            <control type="group">
                <visible>Container.Content(Episodes)  + !Control.IsVisible(515) + Skin.HasSetting(EpisodeBackground) + !String.IsEqual(ListItem.Label,..)</visible>
                <include>Window_OpenClose_Animation</include>
                <control type="image">
                    <include>Dimensions_Fullscreen</include>
                    <aspectratio>scale</aspectratio>
                    <texture background="true">$INFO[ListItem.icon]</texture>
                    <fadetime>FanartCrossfadeTime</fadetime>
                </control>
                <control type="image">
                    <include>Window_OpenClose_Animation</include>
                    <include>Dimensions_Fullscreen</include>
                    <include>VisibleFadeEffect</include>
                    <aspectratio>stretch</aspectratio>
                    <texture>black-back.png</texture>
                    <colordiffuse>88FFFFFF</colordiffuse>
                </control>
            </control>
            <control type="group">
                <visible>Control.IsVisible(724) | Control.IsVisible(508) | Control.IsVisible(51)</visible>
                <visible>!String.IsEmpty(ListItem.Title) + Skin.HasSetting(EnableAdditionalArtWork)</visible>
                <include>Window_OpenClose_Animation</include>
                <control type="image">
                    <include>Window_OpenClose_Animation</include>
                    <include>Dimensions_Fullscreen</include>
                    <include>VisibleFadeEffect</include>
                    <aspectratio>stretch</aspectratio>
                    <texture>black-back.png</texture>
                    <visible>!Skin.HasSetting(HideListItemArtWork) + !Skin.HasSetting(DisableClearArt)</visible>
                    <visible>!String.IsEmpty(ListItem.Art(clearart)) | !String.IsEmpty(ListItem.Art(characterart)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo)) | !String.IsEmpty(ListItem.Art(tvshow.clearlogo))</visible>
                </control>
                <control type="image">
                    <left>-300</left>
                    <top>750r</top>
                    <width>1080</width>
                    <height>1080</height>
                    <include>VisibleFadeEffect</include>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <aspectratio>stretch</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(discart)]</texture>
                    <animation effect="rotate" end="-45" center="auto" time="0" condition="true">Conditional</animation>
                    <visible>!Skin.HasSetting(DisableDiscArt) + !String.IsEmpty(ListItem.Art(discart))</visible>
                </control>
                <control type="image">
                    <left>210</left>
                    <top>0</top>
                    <width>1500</width>
                    <height>843</height>
                    <include>VisibleFadeEffect</include>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(clearart)]</texture>
                    <animation effect="slide" end="0,75" time="0" condition="Control.IsVisible(51)">conditional</animation>
                    <visible>!Skin.HasSetting(DisableClearArt) + !String.IsEmpty(ListItem.Art(clearart))</visible>
                </control>
                <control type="image">
                    <left>210</left>
                    <top>0</top>
                    <width>1500</width>
                    <height>843</height>
                    <include>VisibleFadeEffect</include>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(tvshow.clearart)]</texture>
                    <animation effect="slide" end="0,75" time="0" condition="Control.IsVisible(51)">conditional</animation>
                    <visible>!Skin.HasSetting(DisableClearArt) + String.IsEmpty(ListItem.Art(clearart)) + !String.IsEmpty(ListItem.Art(tvshow.clearart))</visible>
                </control>
                <control type="image">
                    <left>378r</left>
                    <top>108</top>
                    <width>387</width>
                    <height>150</height>
                    <aspectratio align="center" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <animation effect="rotate" start="0" end="-45" center="auto" time="0" condition="true">Conditional</animation>
                    <visible>!Skin.HasSetting(DisableLogoArt) + !String.IsEmpty(ListItem.Art(clearlogo)) + !Control.IsVisible(51)</visible>
                </control>
                <control type="image">
                    <left>378r</left>
                    <top>108</top>
                    <width>387</width>
                    <height>150</height>
                    <aspectratio align="center" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(tvshow.clearlogo)]</texture>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <animation effect="rotate" start="0" end="-45" center="auto" time="0" condition="true">Conditional</animation>
                    <visible>!Skin.HasSetting(DisableLogoArt) + String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + !Control.IsVisible(51)</visible>
                </control>
            </control>
        </control>
        <control type="group">
            <depth>DepthBackground</depth>
            <visible>Window.IsVisible(Home) + !Skin.HasSetting(HideHomeNowPlaying) + Player.HasAudio + !String.Contains(Window(Videos).Property(TvTunesIsAlive),TRUE) + !Window.IsVisible(TVChannels) + !Window.IsVisible(RadioChannels)</visible>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <texture fallback="black-back.png">$VAR[SkinBackgroundPath]media-overlay.jpg</texture>
                <visible>Skin.HasSetting(NoDiffuseVizFanart)</visible>
                <visible>!Skin.HasSetting(DisableSlideShowArt) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady))</visible>
            </control>
            <control type="group">
            	<visible>!Skin.HasSetting(HideHomeNowPlaying) + Skin.HasSetting(DisableSlideShowArt) + Skin.HasSetting(ScriptEnableExtraFanart)</visible>
            	<include>ArtistExtraFanArt</include>
        	</control>
            <control type="group">
            	<visible>Skin.HasSetting(NoDiffuseVizFanart) | String.IsEmpty(Visualisation.Name)</visible>
            	<include>AlbumArtMusicVizWall</include>
        	</control>
        	<include>MusicArtUnderVisualisation</include>
        	<control type="visualisation">
            	<include>Dimensions_Fullscreen</include>
            	<visible>Window.IsVisible(Home) + Skin.HasSetting(VizOnlyOnHome)</visible>
        	</control>
        	<control type="group">
            	<visible>!Skin.HasSetting(NoDiffuseVizFanart) + !String.IsEmpty(Visualisation.Name)</visible>
            	<include>AlbumArtMusicVizWall</include>
        	</control>
        	<include>MusicArtOverVisualisation</include>
    	</control>
        <control type="videowindow">
            <depth>DepthBackground</depth>
            <include>Dimensions_Fullscreen</include>
            <visible>Player.HasVideo + !Skin.HasSetting(HideHomeNowPlaying) + !Window.IsVisible(RadioChannels) + !Window.IsVisible(TVChannels) | [Window.IsVisible(TVChannels) + !Skin.HasSetting(HidePVRNowPlaying)]</visible>
        </control>
    </include>
    <include name="ArtistExtraFanArt">
        <control type="multiimage" id="5043">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[Player.FolderPath,,../extrafanart/]</imagepath>
            <visible>Player.HasAudio + !Player.IsInternetStream</visible>
        </control>
        <control type="multiimage" id="5044">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[Skin.String(PhysicalMusicFolder)]$INFO[MusicPlayer.Artist,,/extrafanart/]</imagepath>
            <visible>Player.HasAudio + String.IsEmpty(Control.GetLabel(5043))</visible>
        </control>
    </include>
    <include name="FanArtExtraThumbs">
        <control type="multiimage" id="5045">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[ListItem.Path,,extrathumbs/]</imagepath>
            <visible>!String.IsEmpty(ListItem.Title)</visible>
            <visible>Container.Content(Movies) | Container.Content(MusicVideos)</visible>
        </control>
    </include>
    <include name="ContentPanelBackgrounds">
        <control type="image">
            <depth>DepthFloor</depth>
            <left>-30</left>
            <top></top>
            <bottom>0</bottom>
            <width>1980</width>
            <height>150</height>
            <texture>floor.png</texture>
            <animation effect="rotatex" end="45" time="0" center="930,0" condition="true">Conditional</animation>
            <animation effect="slide" start="0,15" end="0,0" time="150" condition="Window.Previous(Home)">WindowOpen</animation>
            <animation effect="slide" start="0,0" end="0,15" time="150" condition="Window.Next(Home)">WindowClose</animation>
            <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
            <animation effect="fade" start="100" end="65" time="0" condition="String.IsEmpty(Skin.String(HomeTrans)) + Skin.String(HomeFloor,Transparent)">Conditional</animation>
            <visible>!String.IsEmpty(Skin.String(HomeFloor))</visible>
        </control>
        <control type="group">
            <include>Window_OpenClose_Animation</include>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(50)</visible>
                <control type="image">
                    <left>75</left>
                    <top>90</top>
                    <width>1125</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>1125</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(5040) |Control.IsVisible(504) | Control.IsVisible(550) | Control.IsVisible(512)</visible>
                <control type="image">
                    <left>75</left>
                    <top>90</top>
                    <width>960</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>960</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
                <control type="image">
                    <left>1050</left>
                    <top>90</top>
                    <width>795</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>1050</left>
                    <top>978</top>
                    <width>795</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(551) | Control.IsVisible(560) | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(507) | Control.IsVisible(513)</visible>
                <control type="image">
                    <left>75</left>
                    <top>90</top>
                    <width>1260</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>1260</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
                <control type="image">
                    <left>1350</left>
                    <top>90</top>
                    <width>495</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>1350</left>
                    <top>978</top>
                    <width>495</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(501)</visible>
                <control type="image">
                    <left>75</left>
                    <top>75</top>
                    <width>1770</width>
                    <height>915</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>1770</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(503)</visible>
                <control type="image">
                    <left>75</left>
                    <top>345</top>
                    <width>960</width>
                    <height>645</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>960</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
                <control type="image">
                    <left>1050</left>
                    <top>345</top>
                    <width>825</width>
                    <height>645</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>1050</left>
                    <top>978</top>
                    <width>825</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(51) | Control.IsVisible(500) | Control.IsVisible(505)</visible>
                <control type="image">
                    <left>112</left>
                    <top>90</top>
                    <width>1695</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>112</left>
                    <top>978</top>
                    <width>1695</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(514)</visible>
                <control type="image">
                    <left>75</left>
                    <top>90</top>
                    <width>735</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>735</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
                <control type="image">
                    <left>825</left>
                    <top>90</top>
                    <width>1020</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>825</left>
                    <top>978</top>
                    <width>1020</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(515)</visible>
                <control type="image">
                    <left>75</left>
                    <top>90</top>
                    <width>600</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>75</left>
                    <top>978</top>
                    <width>600</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
                <control type="image">
                    <left>690</left>
                    <top>90</top>
                    <width>1155</width>
                    <height>900</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>690</left>
                    <top>978</top>
                    <width>1155</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
            <control type="group">
                <include>VisibleFadeEffect</include>
                <visible>Control.IsVisible(724)</visible>
                <control type="image">
                    <left>38</left>
                    <top>630</top>
                    <width>1875</width>
                    <height>360</height>
                    <texture border="15">$VAR[DialogPath]ContentPanel.png</texture>
                    <include condition="!String.IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
                </control>
                <control type="image">
                    <left>38</left>
                    <top>978</top>
                    <width>1875</width>
                    <height>96</height>
                    <texture border="15">$VAR[DialogPath]ContentPanelMirror.png</texture>
                </control>
            </control>
        </control>
    </include>
    <include name="Time1">
        <timeperimage>1000</timeperimage>
    </include>
    <include name="Time2">
        <timeperimage>2000</timeperimage>
    </include>
    <include name="Time3">
        <timeperimage>3000</timeperimage>
    </include>
    <include name="Time4">
        <timeperimage>4000</timeperimage>
    </include>
    <include name="Time5">
        <timeperimage>5000</timeperimage>
    </include>
    <include name="Time6">
        <timeperimage>6000</timeperimage>
    </include>
    <include name="Time7">
        <timeperimage>7000</timeperimage>
    </include>
    <include name="Time8">
        <timeperimage>8000</timeperimage>
    </include>
    <include name="Time9">
        <timeperimage>9000</timeperimage>
    </include>
    <include name="Time10">
        <timeperimage>10000</timeperimage>
    </include>
    <include name="Time15">
        <timeperimage>15000</timeperimage>
    </include>
    <include name="Time20">
        <timeperimage>20000</timeperimage>
    </include>
    <include name="Time30">
        <timeperimage>30000</timeperimage>
    </include>
    <include name="Time40">
        <timeperimage>40000</timeperimage>
    </include>
    <include name="Time50">
        <timeperimage>50000</timeperimage>
    </include>
    <include name="Time60">
        <timeperimage>60000</timeperimage>
    </include>
    <include name="BackgroundTimePerImage">
        <include condition="String.IsEmpty(Skin.String(MultiImageTimer))">Time8</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),1)">Time1</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),2)">Time2</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),3)">Time3</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),4)">Time4</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),5)">Time5</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),6)">Time6</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),7)">Time7</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),8)">Time8</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),9)">Time9</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),10)">Time10</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),15)">Time15</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),20)">Time20</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),30)">Time30</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),40)">Time40</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),50)">Time50</include>
        <include condition="String.IsEqual(Skin.String(MultiImageTimer),60)">Time60</include>
    </include>
</includes>
